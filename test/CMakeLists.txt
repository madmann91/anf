add_executable(anf_test test.c)
target_link_libraries(anf_test libanf)
target_include_directories(anf_test PUBLIC ../src)

add_test(NAME core_hset     COMMAND anf_test -t hset)
add_test(NAME core_mpool    COMMAND anf_test -t mpool)
add_test(NAME core_types    COMMAND anf_test -t types)
add_test(NAME core_literals COMMAND anf_test -t literals)
add_test(NAME core_tuples   COMMAND anf_test -t tuples)
add_test(NAME core_arrays   COMMAND anf_test -t arrays)
add_test(NAME core_select   COMMAND anf_test -t select)
add_test(NAME core_bitcast  COMMAND anf_test -t bitcast)
add_test(NAME core_binops   COMMAND anf_test -t binops)
add_test(NAME core_scope    COMMAND anf_test -t scope)
add_test(NAME core_io       COMMAND anf_test -t io)
add_test(NAME core_opt      COMMAND anf_test -t opt)
add_test(NAME core_mem      COMMAND anf_test -t mem)
add_test(NAME core_lex      COMMAND anf_test -t lex)
add_test(NAME core_parse    COMMAND anf_test -t parse)

add_test(NAME valid_literals   COMMAND anf ${PROJECT_SOURCE_DIR}/test/valid/literals.anf)
add_test(NAME valid_array      COMMAND anf ${PROJECT_SOURCE_DIR}/test/valid/array.anf)
add_test(NAME valid_functions  COMMAND anf ${PROJECT_SOURCE_DIR}/test/valid/functions.anf)
add_test(NAME valid_conditions COMMAND anf ${PROJECT_SOURCE_DIR}/test/valid/conditions.anf)
add_test(NAME valid_loops      COMMAND anf ${PROJECT_SOURCE_DIR}/test/valid/loops.anf)
add_test(NAME valid_ops        COMMAND anf ${PROJECT_SOURCE_DIR}/test/valid/ops.anf)
add_test(NAME valid_pow        COMMAND anf ${PROJECT_SOURCE_DIR}/test/valid/pow.anf)
add_test(NAME valid_lambda     COMMAND anf ${PROJECT_SOURCE_DIR}/test/valid/lambda.anf)
add_test(NAME valid_annots     COMMAND anf ${PROJECT_SOURCE_DIR}/test/valid/annots.anf)
add_test(NAME valid_structs    COMMAND anf ${PROJECT_SOURCE_DIR}/test/valid/structs.anf)

add_test(NAME invalid_literals  COMMAND anf --must-fail ${PROJECT_SOURCE_DIR}/test/invalid/literals.anf)
add_test(NAME invalid_functions COMMAND anf --must-fail ${PROJECT_SOURCE_DIR}/test/invalid/functions.anf)
add_test(NAME invalid_structs1  COMMAND anf --must-fail ${PROJECT_SOURCE_DIR}/test/invalid/structs1.anf)
add_test(NAME invalid_structs2  COMMAND anf --must-fail ${PROJECT_SOURCE_DIR}/test/invalid/structs2.anf)
add_test(NAME invalid_array     COMMAND anf --must-fail ${PROJECT_SOURCE_DIR}/test/invalid/array.anf)
add_test(NAME invalid_params    COMMAND anf --must-fail ${PROJECT_SOURCE_DIR}/test/invalid/params.anf)
add_test(NAME invalid_comment   COMMAND anf --must-fail ${PROJECT_SOURCE_DIR}/test/invalid/comment.anf)
add_test(NAME invalid_utf8      COMMAND anf --must-fail ${PROJECT_SOURCE_DIR}/test/invalid/utf8.anf)
add_test(NAME invalid_patterns  COMMAND anf --must-fail ${PROJECT_SOURCE_DIR}/test/invalid/patterns.anf)
add_test(NAME invalid_bind      COMMAND anf --must-fail ${PROJECT_SOURCE_DIR}/test/invalid/bind.anf)
